openapi: 3.0.0
info:
  title: User Management and Banking API
  version: 1.0.0
  description: API for user registration, login, profile management, and banking transactions.

servers:
  - url: http://localhost:3000/api/v1

paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                identity_number:
                  type: string
                identity_type:
                  type: string
                address:
                  type: string
      responses:
        201:
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        500:
          description: Internal server error

  /auth/login:
    post:
      summary: User login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
        404:
          description: User not found
        403:
          description: Invalid Credentials
        500:
          description: Internal server error

  /auth/authenticate:
    get:
      summary: Get user profile
      responses:
        200:
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Unauthorized
        500:
          description: Internal server error

  /users:
    get:
      summary: Get a list of all users
      responses:
        200:
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        500:
          description: Internal server error

  /users/{userId}:
    get:
      summary: Get user by ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
        500:
          description: Internal server error

  /accounts:
    post:
      summary: Register a new bank account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                bank_name:
                  type: string
                bank_account_number:
                  type: string
                balance:
                  type: string
      responses:
        201:
          description: Bank account registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BankAccount'
        400:
          description: Bad request
        404:
          description: User not found
        500:
          description: Internal server error

    get:
      summary: Get a list of all bank accounts
      responses:
        200:
          description: List of bank accounts retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BankAccount'
        500:
          description: Internal server error

  /accounts/{accountId}:
    get:
      summary: Get bank account by ID
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Bank account retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
        404:
          description: Bank account not found
        500:
          description: Internal server error

  /transactions:
    post:
      summary: Create a new bank transaction
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                source_account_id:
                  type: integer
                destination_account_id:
                  type: integer
                amount:
                  type: number
      responses:
        200:
          description: Transaction created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BankTransaction'
        400:
          description: Bad request
        404:
          description: Account not found
        500:
          description: Internal server error

    get:
      summary: Get a list of all bank transactions
      responses:
        200:
          description: List of bank transactions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BankTransaction'
        500:
          description: Internal server error

  /transactions/{transactionId}:
    get:
      summary: Get bank transaction by ID
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Bank transaction retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankTransaction'
        404:
          description: Transaction not found
        500:
          description: Internal server error

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        profile:
          $ref: '#/components/schemas/Profile'
    Profile:
      type: object
      properties:
        identity_number:
          type: string
        identity_type:
          type: string
        address:
          type: string

    BankAccount:
      type: object
      properties:
        id:
          type: integer
        bank_name:
          type: string
        bank_account_number:
          type: string
        balance:
          type: string
        user:
          $ref: '#/components/schemas/User'

    BankTransaction:
      type: object
      properties:
        id:
          type: integer
        source_account:
          $ref: '#/components/schemas/BankAccount'
        destination_account:
          $ref: '#/components/schemas/BankAccount'
        amount:
          type: number